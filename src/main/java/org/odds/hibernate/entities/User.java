package org.odds.hibernate.entities;
// Generated May 28, 2013 10:11:13 PM by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "odds_db")
public class User implements java.io.Serializable {

    private Integer id;
    private String firstname;
    private String lastname;
    private String username;
    private String password;
    private Integer enabled;
    private Set<Orphanage> orphanages = new HashSet<Orphanage>(0);
    private Set<DonationItem> donationItems = new HashSet<DonationItem>(0);
    private Set<Feedback> feedbacks = new HashSet<Feedback>(0);
    private Set<UserRole> userRoles = new HashSet<UserRole>(0);
    private Set<UserContact> userContacts = new HashSet<UserContact>(0);
    private Set<UserSettings> userSettingses = new HashSet<UserSettings>(0);
    private Set<DonationMoney> donationMoneies = new HashSet<DonationMoney>(0);

    public User() {
    }

    public User(String firstname, String lastname, String username, String password, Integer enabled, Set<Orphanage> orphanages, Set<DonationItem> donationItems, Set<Feedback> feedbacks, Set<UserRole> userRoles, Set<UserContact> userContacts, Set<UserSettings> userSettingses, Set<DonationMoney> donationMoneies) {
        this.firstname = firstname;
        this.lastname = lastname;
        this.username = username;
        this.password = password;
        this.enabled = enabled;
        this.orphanages = orphanages;
        this.donationItems = donationItems;
        this.feedbacks = feedbacks;
        this.userRoles = userRoles;
        this.userContacts = userContacts;
        this.userSettingses = userSettingses;
        this.donationMoneies = donationMoneies;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "firstname", length = 64)
    public String getFirstname() {
        return this.firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    @Column(name = "lastname", length = 64)
    public String getLastname() {
        return this.lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    @Column(name = "username", length = 45)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "password", length = 128)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "enabled")
    public Integer getEnabled() {
        return this.enabled;
    }

    public void setEnabled(Integer enabled) {
        this.enabled = enabled;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "orphanage_admin", catalog = "odds_db", joinColumns = {
        @JoinColumn(name = "user_id", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "orphanage_id", nullable = false, updatable = false)})
    public Set<Orphanage> getOrphanages() {
        return this.orphanages;
    }

    public void setOrphanages(Set<Orphanage> orphanages) {
        this.orphanages = orphanages;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
    public Set<DonationItem> getDonationItems() {
        return this.donationItems;
    }

    public void setDonationItems(Set<DonationItem> donationItems) {
        this.donationItems = donationItems;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Feedback> getFeedbacks() {
        return this.feedbacks;
    }

    public void setFeedbacks(Set<Feedback> feedbacks) {
        this.feedbacks = feedbacks;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserRole> getUserRoles() {
        return this.userRoles;
    }

    public void setUserRoles(Set<UserRole> userRoles) {
        this.userRoles = userRoles;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserContact> getUserContacts() {
        return this.userContacts;
    }

    public void setUserContacts(Set<UserContact> userContacts) {
        this.userContacts = userContacts;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserSettings> getUserSettingses() {
        return this.userSettingses;
    }

    public void setUserSettingses(Set<UserSettings> userSettingses) {
        this.userSettingses = userSettingses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
    public Set<DonationMoney> getDonationMoneies() {
        return this.donationMoneies;
    }

    public void setDonationMoneies(Set<DonationMoney> donationMoneies) {
        this.donationMoneies = donationMoneies;
    }
}
